security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
#    providers:
#        chain_provider:
#            chain:
#                providers: [in_memory, in_database]
#        in_database:
#            entity:
#                class: App\Entity\Author
#                property: username
#        in_memory:
#            memory:
#            users:
#                superadmin:
#                    password: 123
#                    roles: 'ROLE_AUTHOR'
    encoders:
        App\Entity\Author: bcrypt
        Symfony\Component\Security\Core\User\User: bcrypt

    providers:
        chain_provider:
            chain:
                providers: [in_memory, in_database]
        in_memory:
            memory:
                users:
                    superadmin:
                        password: $2y$13$OcWnyf.cnL3HYS3nooAHs.GTIV8cpGjEp.1StDZrgV.G5jUnoQ6RO
                        roles: ['ROLE_AUTHOR ROLE_SUPERUSER']
        in_database:
            entity: { class: App\Entity\Author, property: username }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            provider: chain_provider
            form_login:
                login_path: login
                check_path: login
            logout:
                path: /logout
                target: /

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/hashtag, roles: ROLE_AUTHOR }
         - { path: ^/post/new, roles: ROLE_AUTHOR }
         - { path: ^/author/editauthordetails, roles: ROLE_AUTHOR }
         - { path: ^/author/editauthorpassword, roles: ROLE_AUTHOR }
         - { path: ^/author, roles: ROLE_SUPERUSER }
